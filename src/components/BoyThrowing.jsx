/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 public/models/boyThrowing.glb
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import * as THREE from 'three'

export function BoyThrowing(props) {
  // TODO: change speed for how strong the throw is
  // Also have animation for pulling arm further back depending on mouse position of player
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('models/boyThrowing.glb')
  const { actions, mixer } = useAnimations(animations, group)
  let action = props.action
  let magnitude = props.magnitude

  useEffect(() =>
  {
    console.log(action)
    if (actions[action]) {
      let currentAction = actions[action]
      currentAction.clampWhenFinished = true
      currentAction.setLoop(THREE.LoopOnce)
      currentAction.reset().play()
      if (action == 'throw.001') { 
        mixer.timeScale = 3*magnitude // change depending on mouse release/ power
      } else {
        mixer.timeScale = 1
      }
      if (action == 'throw.001') {
        // action rest
        let currentAction = actions["rest"]
        currentAction.clampWhenFinished = true
        currentAction.setLoop(THREE.LoopOnce)

        currentAction.reset().play()
      }
    }
  }, [action])
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature002" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <primitive object={nodes.mixamorig6Hips} />
          <skinnedMesh name="Ch09" geometry={nodes.Ch09.geometry} material={materials['Ch09_body.001']} material-transparent material-opacity={0.3} skeleton={nodes.Ch09.skeleton}/>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('models/boyThrowing.glb')
